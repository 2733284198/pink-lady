// @contact.name API Support
// @contact.url http://github.com/axiaoxin-com/pink-lady
// @contact.email 254606826@qq.com

// @license.name Apache 2.0
// @license.url http://www.apache.org/licenses/LICENSE-2.0.html

// @securityDefinitions.basic BasicAuth

// @securityDefinitions.apikey ApiKeyAuth
// @in header
// @name Authorization

package apis

import (
	"net/http"

	"github.com/axiaoxin-com/pink-lady/apis/docs"
	// docs is generated by Swag CLI, you have to import it.
	_ "github.com/axiaoxin-com/pink-lady/apis/docs"
	"github.com/spf13/viper"

	"github.com/gin-gonic/gin"
	swaggerFiles "github.com/swaggo/files"
	ginSwagger "github.com/swaggo/gin-swagger"
)

const (
	// Version api 版本号
	Version string = "0.0.1"
	// DisableGinSwaggerEnvkey 设置该环境变量时关闭 swagger 文档
	DisableGinSwaggerEnvkey = "DISABLE_GIN_SWAGGER"
)

// Routes 注册 API URL 路由
func Routes(app *gin.Engine) {
	// TODO: 在这里注册你的 gin API
}

// Register 在 gin engine 上注册 url 对应的 HandlerFunc
func Register(httpHandler http.Handler) {
	app, ok := httpHandler.(*gin.Engine)
	if !ok {
		panic("HTTP handler must be *gin.Engine")
	}

	// api 文档变量设置，注意这里依赖 viper 读配置，需要保证在 main 中已预先加载这些配置项
	docs.SwaggerInfo.Title = viper.GetString("apidocs.title")
	docs.SwaggerInfo.Description = viper.GetString("apidocs.desc")
	docs.SwaggerInfo.Version = Version
	docs.SwaggerInfo.Host = viper.GetString("apidocs.host")
	docs.SwaggerInfo.BasePath = viper.GetString("apidocs.basepath")
	docs.SwaggerInfo.Schemes = viper.GetStringSlice("apidocs.schemes")

	// auth 加到路由中可以对该路由添加 basic auth 登录验证
	auth := gin.BasicAuth(gin.Accounts{
		viper.GetString("basic_auth.username"): viper.GetString("basic_auth.password"),
	})

	// Group x 默认 url 路由
	x := app.Group("/x")
	{
		// ginSwagger 生成的在线 API 文档路由
		x.GET("/apidocs/*any", auth, ginSwagger.DisablingWrapHandler(swaggerFiles.Handler, DisableGinSwaggerEnvkey))
		// 默认的 ping 方法，返回 server 相关信息
		x.GET("/ping", Ping)
	}

	// 注册其他 gin HandlerFunc
	Routes(app)
}
